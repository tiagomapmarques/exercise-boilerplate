#!/usr/bin/env node
/** biome-ignore-all lint/suspicious/noConsole: Useful as this is a script */
import { exec } from 'node:child_process';

const info = (...args) => {
  args
    .join(' ')
    .split('\n')
    .forEach((line) => {
      console.log('\x1b[34m%s\x1b[0m', '_INFO_', line);
    });
};
const execAsync = (command) =>
  new Promise((resolve) => {
    exec(command, (_error, stdout) => resolve(stdout));
  });

const getDependenciesVersions = async () => {
  const output = await execAsync('pnpm outdated --format json');

  return Object.fromEntries(
    Object.entries(JSON.parse(output.slice(output.indexOf('{')))),
  );
};

const dependencyVersions = await getDependenciesVersions();
const dependencies = Object.keys(dependencyVersions).map((dependency) => {
  return `- ${dependency}: ${dependencyVersions[dependency].latest} (current: ${dependencyVersions[dependency].current})`;
});

if (dependencies.length > 0) {
  info(`The following packages are outdated:\n  ${dependencies.join('\n  ')}`);
} else {
  console.log('No outdated packages found');
}
